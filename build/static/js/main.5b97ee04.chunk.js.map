{"version":3,"sources":["components/common/Header.js","components/home/Home.js","callApi.js","services/TodoService.js","components/onboarding/Todo.js","components/onboarding/TodoList.js","useFeatureFlag.js","components/onboarding/SpeechRecognition.js","components/onboarding/TodoContainer.js","components/common/NotFound.js","components/common/Navigation.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","className","Home","Component","callApi","_x","_callApi","apply","this","arguments","_callee","url","method","data","_ref$contentType","contentType","_ref$header","header","onUploadProgress","cancelTokenSource","_process$env","REACT_APP_API_URL","REACT_APP_OCP_APIM_SUB_KEY","regenerator_default","wrap","_context","prev","next","process","abrupt","axios","headers","Object","objectSpread2","Ocp-Apim-Subscription-Key","concat","Content-type","cancelToken","token","catch","err","isCancel","canceled","stop","services_TodoService","newData","JSON","parse","id","Todo","text","todo","todos","setTodos","completed","onClick","map","item","stringify","TodoService","put","index_es","icon","faSquareCheck","delete","filter","el","faTrash","TodoList","filteredTodos","onboarding_Todo","key","client","AppConfigurationClient","speechsdk","require","SpeechRecognition","setInputText","inputText","fetchData","listening","setListening","setStatus","REACT_APP_SPEECH_KEY","REACT_APP_SPEECH_REGION","speechConfig","SpeechConfig","fromSubscription","speechRecognitionLanguage","audioConfig","AudioConfig","fromDefaultMicrophoneInput","recognizer","SpeechRecognizer","submitTodoHandler","e","preventDefault","post","then","Form","onSubmit","Group","controlId","Button","recognizeOnceAsync","result","reason","ResultReason","RecognizedSpeech","close","size","variant","style","color","background","faMicrophone","type","margin","Control","as","value","onChange","target","rows","Select","TodoContainer","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","status","_useState7","_useState8","setFilteredTodos","_useState9","_useState10","flag","flagKey","length","undefined","enabled","setEnabled","useMemo","asyncToGenerator","mark","toString","trim","console","error","getConfigurationSetting","sent","debug","t0","useFeatureFlag","get","res","useEffect","filterHandler","onboarding_SpeechRecognition","onboarding_TodoList","NotFound","Navigation","Navbar","Container","Brand","Nav","react_router_dom","to","dotenv","config","App","Navigation_Navigation","react_router","path","element","Home_Home","onboarding_TodoContainer","NotFound_NotFound","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5b97ee04.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header({ title }) {\r\n  return <h1 className=\"todo-title\">{title}</h1>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../common/Header\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-container\">\r\n        <Header title=\"Home\" />\r\n        <h4 className=\"home-text\">\r\n          Welcome! Click on the \"Tasks\" link in the navigation bar to see all\r\n          your onboarding tasks\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nexport async function callApi({\r\n  url,\r\n  method,\r\n  data,\r\n  contentType = \"application/json\",\r\n  header = {},\r\n  onUploadProgress,\r\n  cancelTokenSource,\r\n}) {\r\n  const { REACT_APP_API_URL, REACT_APP_OCP_APIM_SUB_KEY } = process.env;\r\n  return axios({\r\n    headers: {\r\n      \"Ocp-Apim-Subscription-Key\": `${REACT_APP_OCP_APIM_SUB_KEY}`,\r\n      \"Content-type\": contentType,\r\n      ...header,\r\n    },\r\n    onUploadProgress,\r\n    method,\r\n    url: `${REACT_APP_API_URL}${url}`,\r\n    data: data || null,\r\n    cancelToken: cancelTokenSource && cancelTokenSource.token,\r\n  }).catch((err) => {\r\n    // track error\r\n    if (axios.isCancel(err)) {\r\n      return { canceled: true };\r\n    } else {\r\n      // handle error\r\n      return [];\r\n    }\r\n  });\r\n}\r\n","import { callApi } from \"../callApi\";\r\nclass TodoService {\r\n  get() {\r\n    return callApi({ method: \"get\", url: \"/api/todo\" });\r\n  }\r\n  post(newData) {\r\n    return callApi({ method: \"post\", url: \"/api/todo\", data: newData });\r\n  }\r\n  put(newData) {\r\n    newData = JSON.parse(newData);\r\n    return callApi({\r\n      method: \"put\",\r\n      url: `/api/todo/${newData.id}`,\r\n      data: newData,\r\n    });\r\n  }\r\n  delete(id) {\r\n    return callApi({ method: \"delete\", url: `/api/todo/${id}` });\r\n  }\r\n}\r\nexport default new TodoService();\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faSquareCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TodoService from \"../../services/TodoService\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    todos.map((item) => {\r\n      if (item.id === todo.id) {\r\n        TodoService.delete(todo.id);\r\n      }\r\n    });\r\n    // matching clicked element with element from state\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          const newData = JSON.stringify({\r\n            ...item,\r\n            completed: !item.completed,\r\n          });\r\n          TodoService.put(newData);\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <FontAwesomeIcon icon={faSquareCheck}></FontAwesomeIcon>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { AppConfigurationClient } from \"@azure/app-configuration\";\r\nimport { useMemo, useState } from \"react\";\r\n\r\nconst { REACT_APP_CONFIG_KEY_CONNECTION_STRING } = process.env;\r\n\r\nconst client = new AppConfigurationClient(\r\n  REACT_APP_CONFIG_KEY_CONNECTION_STRING\r\n);\r\n\r\n/**\r\n * Retrieves the specified feature flag from Azure App Configuration.\r\n * @param {string} flagKey App Config Feature Flag key\r\n * @returns the feature flag for the specified key\r\n */\r\nconst useFeatureFlag = (flagKey = \"\") => {\r\n  const [enabled, setEnabled] = useState(false);\r\n\r\n  useMemo(async () => {\r\n    if (!flagKey || !flagKey.toString().trim().length) {\r\n      console.error(\"A feature flag key must be supplied.\");\r\n    } else {\r\n      try {\r\n        const result = await client.getConfigurationSetting({\r\n          key: `.appconfig.featureflag/${flagKey.toString().trim()}`,\r\n        });\r\n        if (result && typeof result === \"object\") {\r\n          console.debug(\r\n            \"Feature: \" + JSON.parse(result.value).id,\r\n            JSON.parse(result.value).enabled\r\n          );\r\n          setEnabled(JSON.parse(result.value).enabled);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }, [flagKey]);\r\n\r\n  return { enabled };\r\n};\r\n\r\nexport { useFeatureFlag };\r\n","import React from \"react\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMicrophone } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TodoService from \"../../services/TodoService\";\r\n\r\nimport { ResultReason } from \"microsoft-cognitiveservices-speech-sdk\";\r\n\r\nconst speechsdk = require(\"microsoft-cognitiveservices-speech-sdk\");\r\n\r\nconst SpeechRecognition = ({\r\n  setInputText,\r\n  inputText,\r\n  fetchData,\r\n  listening,\r\n  setListening,\r\n  setStatus,\r\n}) => {\r\n  // envirnment variables for key and region\r\n  const { REACT_APP_SPEECH_KEY, REACT_APP_SPEECH_REGION } = process.env;\r\n\r\n  const speechConfig = speechsdk.SpeechConfig.fromSubscription(\r\n    REACT_APP_SPEECH_KEY,\r\n    REACT_APP_SPEECH_REGION\r\n  );\r\n\r\n  speechConfig.speechRecognitionLanguage = \"en-US\";\r\n\r\n  const audioConfig = speechsdk.AudioConfig.fromDefaultMicrophoneInput();\r\n  const recognizer = new speechsdk.SpeechRecognizer(speechConfig, audioConfig);\r\n\r\n  // function for recording audio for microphone and setting input text\r\n  const StartListening = () => {\r\n    setInputText(\"I'm listening...\");\r\n    setListening(true);\r\n\r\n    recognizer.recognizeOnceAsync((result) => {\r\n      if (result.reason === ResultReason.RecognizedSpeech) {\r\n        setInputText(result.text);\r\n      } else {\r\n        setInputText(\r\n          \"ERROR: Speech was cancelled or could not be recognized. Ensure your microphone is working properly.\"\r\n        );\r\n      }\r\n      setListening(false);\r\n      recognizer.close();\r\n    });\r\n  };\r\n\r\n  // handler for setting input text\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  // handler for settting filter status\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  // handler for setting todo item\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newData = JSON.stringify({ text: inputText, completed: false });\r\n    TodoService.post(newData).then(() => fetchData());\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitTodoHandler}>\r\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n        <Button\r\n          className=\"mic-btn\"\r\n          onClick={StartListening}\r\n          size=\"lg\"\r\n          variant=\"default\"\r\n          style={\r\n            listening\r\n              ? { color: \"red\", background: \"#ffaaa7\" }\r\n              : { color: \"#fee440\", background: \"#3b88d1\" }\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faMicrophone}></FontAwesomeIcon>\r\n        </Button>\r\n        <Button\r\n          className=\"save-btn\"\r\n          type=\"submit\"\r\n          onClick={submitTodoHandler}\r\n          size=\"lg\"\r\n          variant=\"default\"\r\n          style={{ color: \"#3b88d1\", background: \"#FEE440\", margin: \"1rem\" }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          value={inputText}\r\n          onChange={inputTextHandler}\r\n          rows={3}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Select className=\"todo-select\" onChange={statusHandler} size=\"lg\">\r\n        <option value=\"all\">All</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"uncompleted\">Uncompleted</option>\r\n      </Form.Select>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SpeechRecognition;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// importing components\r\nimport TodoList from \"./TodoList\";\r\nimport Header from \"../common/Header\";\r\nimport { useFeatureFlag } from \"../../useFeatureFlag\";\r\n\r\nimport SpeechRecognition from \"./SpeechRecognition\";\r\nimport TodoService from \"../../services/TodoService\";\r\n\r\nconst TodoContainer = () => {\r\n  // states\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n\r\n  const { enabled: flag } = useFeatureFlag(\"speechRecognitionFlag\"); // The feature flag key from App Config\r\n\r\n  // side effect to load todo list items from API and set todos state on inital load\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function fetchData() {\r\n    TodoService.get().then((res) => setTodos(res.data));\r\n  }\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    filterHandler();\r\n  }, [todos, status]);\r\n\r\n  // function used to set filtered list based on current status\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case \"completed\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n        break;\r\n      case \"uncompleted\":\r\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <Header title=\"Tasks\" />\r\n\r\n      {flag && (\r\n        <SpeechRecognition\r\n          inputText={inputText}\r\n          setInputText={setInputText}\r\n          fetchData={fetchData}\r\n          listening={listening}\r\n          setListening={setListening}\r\n          setStatus={setStatus}\r\n        />\r\n      )}\r\n\r\n      <TodoList\r\n        setTodos={setTodos}\r\n        todos={todos}\r\n        filteredTodos={filteredTodos}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoContainer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return <h1>NotFound</h1>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <Navbar variant=\"default\" style={{ background: \"#3b88d1\" }}>\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <h1 style={{ color: \"#fee440\" }}>DE Companion</h1>\r\n        </Navbar.Brand>\r\n        <Nav className=\"me-auto nav-text\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/tasks\">Tasks</Link>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Home from \"./components/home/Home\";\r\nimport TodoContainer from \"./components/onboarding/TodoContainer\";\r\nimport NotFound from \"./components/common/NotFound\";\r\nimport Navigation from \"./components/common/Navigation\";\r\n\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/tasks\" element={<TodoContainer />} />\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}